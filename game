import random
suits=("Hearts","Dimonds","Spades","Clubs")
ranks=("Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Ace")
values={"Two":2 ,"Three":3,"Four":4,"Five":5,"Six":6,"Seven":7,"Eight":8,"Nine":9,"Ten":10,"Jack":11,"Queen":12,"King":13,"Ace":14}

class Card:
    def __init__(self,suit,rank):
        self.suit=suit
        self.rank=rank
        self.value=values[rank]
    def __str__(self):
        return self.rank + " of " + self.suit
    
class Deck:
    def __init__(self):
        self.all_cards=[]
        for suit in suits:
            for rank in ranks:
                created_cards=Card(suit,rank)
                self.all_cards.append(created_cards)
    def shuffle(self):
        random.shuffle(self.all_cards)
    
    
    def deal_one(self):
        return self.all_cards.pop()
class Player:
    
    def __init__(self,name):
        self.name=name
        self.all_cards=[]
    def remove_one(self):
        self.all_cards.pop(0)
    def add_one(self,new_cards):
        if type(new_cards)==type([]):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
    def __str__(self):
        return f'player {self.name } has {len(self.all_cards) } cards.'
player_one=Player("Player one")
player_two=Player("Player two")
new_deck=Deck()
new_deck.shuffle()
print(len(player_one.all_cards))
print(len(player_two.all_cards))
for i in range(26):
    player_one.add_one(new_deck.deal_one())
    player_two.add_one(new_deck.deal_one())

game_on=True
round_no=0
while game_on:
    round_no+=1
    print(f"round {round_no}")
    if len(player_one.all_cards)==0:
        
        print("Player one is out of cards")
        print("Player two wins!!")
        game_on=False
        break
        
    if len(player_two.all_cards)==0:
        print("Player two is out of cards")
        print("Player one wins!!")
        game_on=False
        break
    player_one_cards=[]
    player_one_cards.append(player_one.all_cards[0])
    player_one.all_cards.pop(0)
    player_two_cards=[]
    player_two_cards.append(player_two.all_cards[0])
    player_two.all_cards.pop(0)
    at_war=True
    
    while(at_war):
    
        if player_one_cards[-1].value>player_two_cards[-1].value:
            player_one.add_one(player_one_cards)
            player_one.add_one(player_two_cards)
            at_war=False
        
        elif player_one_cards[-1].value < player_two_cards[-1].value:
            player_two.add_one(player_one_cards)
            player_two.add_one(player_two_cards)
            at_war=False
        
        else:
            print("WAR")
            
            if len(player_one.all_cards)<5:
                print("Player one unable to declare war")
                print("Player two wins")
                game_on=False
                break
            elif len(player_two.all_cards)<5:
                print("Player two unable to declare war")
                print("Player One wins")
                game_on=False
                break
            else:
                for num in range(5):
                    player_one_cards.append(player_one.all_cards[0])
                    player_one.all_cards.pop(0)
                    player_two_cards.append(player_two.all_cards[0])
                    player_two.all_cards.pop(0)
    
    
        
